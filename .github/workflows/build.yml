name: Build pipeline

on:
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:

  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    
    - name: Set up docker-compose
      uses: parisk/setup-compose-cli@v1
    
    - name: Run docker-compose
      run: docker-compose -f ./build/docker-compose.yml -f ./build/docker-compose.CI.yml up --build --abort-on-container-exit --force-recreate
    
    - name: Publish test results
      id: publishTestResults
      uses: dorny/test-reporter@v1
      if: success() || failure()
      with:
        name: Test results      
        path: 'test-results/**/*.trx'    
        reporter: dotnet-trx  
        fail-on-error: 'true'

    - name: Copy Coverage
      run: cp test-results/**/coverage.cobertura.xml coverage.cobertura.xml

    - name: Code Coverage Summary Report
      uses: irongut/CodeCoverageSummary@v1.2.0
      with:
        filename: coverage.cobertura.xml
        badge: true
        fail_below_min: false
        format: markdown
        hide_branch_rate: false
        hide_complexity: false
        indicators: true
        output: both
        thresholds: '50 70'
        
    - name: Create test result badge successful tests
      if: success() || failure()
      uses: schneegans/dynamic-badges-action@v1.4.
      with:
        auth: ${{ secrets.GIST_SECRET }}
        gistID: ${{ secrets.TEST_RESULTS_GIST_ID }}
        filename: testresult_success.json
        label: Tests passed
        message: ${{ steps.publishTestResults.outputs.passed }}
        color: green
        
    - name: Create test result badge failed tests
      if: success() || failure()
      uses: schneegans/dynamic-badges-action@v1.4.0
      with:
        auth: ${{ secrets.GIST_SECRET }}
        gistID: ${{ secrets.TEST_RESULTS_GIST_ID }}
        filename: testresult_failed.json
        label: Tests failed
        message: ${{ steps.publishTestResults.outputs.failed }}
        color: red
        
